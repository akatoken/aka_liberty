;; Jetton standard
const op::transfer = 0xf8a7ea5;
const op::transfer_notification = 0x7362d09c;
const op::internal_transfer = 0x178d4519;
const op::excesses = 0xd53276db;
const op::burn = 0x595f07bc;
const op::burn_notification = 0x7bdd97de;

;; Discoverable Jetton standard
const op::provide_wallet_address = 0x2c76b973;
const op::take_wallet_address = 0xd1735400;

;; BCL
const op::set_fees = "op::set_fees"c;
const op::set_code = "op::set_code"c;
const op::set_data = "op::set_data"c;
const op::set_code_data = "op::set_code_data"c;
const op::set_admin = "op::set_admin"c;
const op::set_content = "op::set_content"c;
;; user wants to buy coins
const op::buy = "op::buy"c;
;; user wats to sell coins
const op::sell = "op::sell"c;
;; sent from user jetton wallet to master
const op::sell_coins_notification = "op::sell_coins_notification"c;
;; sent to the wallet from owner
const op::unlock_wallet = "op::unlock_wallet"c;
;; sent from wallet to master
const op::unlock_wallet_callback = "op::unlock_wallet_callback"c;
;; sent from master to wallet
const op::unlock_wallet_excess = "op::unlock_wallet_excess"c;
;; used to mark fees payout from BCL contract
const op::fee_payout = "op::fee_payout"c;
const op::top_up = 0xd372158c;